from ..exceptions import except_orm as except_orm
from ..models import AbstractModel as AbstractModel, BaseModel, LOG_ACCESS_COLUMNS as LOG_ACCESS_COLUMNS, MAGIC_COLUMNS as MAGIC_COLUMNS, MetaModel as MetaModel, Model as Model, TransientModel as TransientModel
from typing import Any

browse_record_list = BaseModel

class browse_record:
    class __metaclass__(type):
        def __instancecheck__(self, inst): ...

class browse_null:
    class __metaclass__(type):
        def __instancecheck__(self, inst): ...

def transfer_field_to_modifiers(field, modifiers) -> None: ...
def transfer_node_to_modifiers(node, modifiers, context: Any | None = ..., in_tree_view: bool = ...) -> None: ...
def simplify_modifiers(modifiers) -> None: ...
def transfer_modifiers_to_node(modifiers, node) -> None: ...
def setup_modifiers(node, field: Any | None = ..., context: Any | None = ..., in_tree_view: bool = ...) -> None: ...
def test_modifiers(what, expected) -> None: ...
def modifiers_tests() -> None: ...
