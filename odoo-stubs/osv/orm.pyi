from ..exceptions import except_orm as except_orm
from ..models import AbstractModel as AbstractModel, BaseModel, LOG_ACCESS_COLUMNS as LOG_ACCESS_COLUMNS, MAGIC_COLUMNS as MAGIC_COLUMNS, MetaModel as MetaModel, Model as Model, TransientModel as TransientModel
from typing import Any, Optional

browse_record_list = BaseModel

class BRM(type):
    def __instancecheck__(self, inst: Any): ...

browse_record: Any

class NBM(type):
    def __instancecheck__(self, inst: Any): ...

browse_null: Any

def transfer_field_to_modifiers(field: Any, modifiers: Any) -> None: ...
def transfer_node_to_modifiers(node: Any, modifiers: Any, context: Optional[Any] = ..., in_tree_view: bool = ...) -> None: ...
def simplify_modifiers(modifiers: Any) -> None: ...
def transfer_modifiers_to_node(modifiers: Any, node: Any) -> None: ...
def setup_modifiers(node: Any, field: Optional[Any] = ..., context: Optional[Any] = ..., in_tree_view: bool = ...) -> None: ...
def test_modifiers(what: Any, expected: Any) -> None: ...
def modifiers_tests() -> None: ...
