from typing import Any

class lazy_property:
    fget: Any = ...
    def __init__(self, fget: Any) -> None: ...
    def __get__(self, obj: Any, cls: Any): ...
    @property
    def __doc__(self): ...
    @staticmethod
    def reset_all(obj: Any) -> None: ...

class lazy_classproperty(lazy_property):
    def __get__(self, obj: Any, cls: Any): ...

def conditional(condition: Any, decorator: Any): ...
def synchronized(lock_attr: str = ...): ...

class _ClassProperty(property):
    def __get__(self, cls: Any, owner: Any): ...

def classproperty(func: Any): ...
