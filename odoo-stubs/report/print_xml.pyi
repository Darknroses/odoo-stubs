from typing import Any

class InheritDict(dict):
    parent: Any
    def __init__(self, parent: Any | None = ...) -> None: ...
    def __getitem__(self, name): ...

def tounicode(val): ...

class document:
    cr: Any
    uid: Any
    datas: Any
    func: Any
    bin_datas: Any
    def __init__(self, cr, uid, datas, func: bool = ...) -> None: ...
    def node_attrs_get(self, node): ...
    def get_value(self, browser, field_path): ...
    def get_value2(self, browser, field_path): ...
    def eval(self, record, expr): ...
    def parse_node(self, node, parent, browser, datas: Any | None = ...) -> None: ...
    def xml_get(self): ...
    def parse_tree(self, ids, model, context: Any | None = ...) -> None: ...
    dom: Any
    def parse_string(self, xml, ids, model, context: Any | None = ...) -> None: ...
    doc: Any
    def parse(self, filename, ids, model, context: Any | None = ...) -> None: ...
    def close(self) -> None: ...
