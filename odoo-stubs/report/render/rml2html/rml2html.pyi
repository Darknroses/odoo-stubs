from typing import Any

class _flowable:
    _tags: Any
    template: Any
    doc: Any
    localcontext: Any
    _cache: Any
    def __init__(self, template, doc, localcontext: Any | None = ...) -> None: ...
    def _tag_page_break(self, node): ...
    def _tag_next_template(self, node): ...
    def _tag_next_frame(self, node): ...
    def _tag_title(self, node): ...
    def _tag_spacer(self, node): ...
    def _tag_table(self, node): ...
    def _tag_para(self, node): ...
    def _section(self, node): ...
    def render(self, node): ...

class _rml_tmpl_tag:
    def __init__(self, *args) -> None: ...
    def tag_start(self): ...
    def tag_end(self): ...
    def tag_stop(self): ...
    def tag_mergeable(self): ...

class _rml_tmpl_frame(_rml_tmpl_tag):
    width: Any
    posx: Any
    def __init__(self, posx, width) -> None: ...
    def tag_start(self): ...
    def tag_end(self): ...
    def tag_stop(self): ...
    def tag_mergeable(self): ...
    def merge(self, frame) -> None: ...

class _rml_tmpl_draw_string(_rml_tmpl_tag):
    localcontext: Any
    posx: Any
    posy: Any
    pos: Any
    def __init__(self, node, style, localcontext=...) -> None: ...
    def tag_start(self): ...
    def merge(self, ds) -> None: ...

class _rml_tmpl_draw_lines(_rml_tmpl_tag):
    localcontext: Any
    ok: bool
    posx: Any
    posy: Any
    width: Any
    style: Any
    def __init__(self, node, style, localcontext=...) -> None: ...
    def tag_start(self): ...

class _rml_stylesheet:
    doc: Any
    localcontext: Any
    attrs: Any
    _tags: Any
    result: Any
    def __init__(self, localcontext, stylesheet, doc): ...
    def render(self): ...

class _rml_draw_style:
    style: Any
    _styles: Any
    def __init__(self): ...
    def update(self, node) -> None: ...
    def font_size_get(self, tag): ...
    def get(self, tag): ...

class _rml_template:
    frame_pos: int
    localcontext: Any
    frames: Any
    template_order: Any
    page_template: Any
    loop: int
    _tags: Any
    style: Any
    data: str
    template: Any
    def __init__(self, template, localcontext: Any | None = ...) -> None: ...
    def _get_style(self): ...
    def set_next_template(self) -> None: ...
    def set_template(self, name) -> None: ...
    def frame_start(self): ...
    def frame_stop(self): ...
    def start(self): ...
    def end(self): ...

class _rml_doc:
    dom: Any
    localcontext: Any
    filename: Any
    result: str
    def __init__(self, data, localcontext) -> None: ...
    def render(self, out) -> None: ...

def parseString(data, localcontext=..., fout: Any | None = ...): ...
def rml2html_help() -> None: ...
